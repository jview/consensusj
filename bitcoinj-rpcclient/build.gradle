plugins {
    id 'maven'
}

apply plugin: 'java'
apply plugin: 'maven'


group = 'com.101tec'
version = '0.7-dev'

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile project(':bitcoinj-json')
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    compile "org.codehaus.groovy:groovy:${groovyVersion}:indy"
    compile ("org.codehaus.groovy:groovy-json:${groovyVersion}:indy") {
        transitive = false
    }

    testCompile project(':bitcoinj-dsl')                // Use Groovy extensions in tests
}

// Test Structure
sourceSets {
    integrationTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
        groovy {
            srcDir 'src/integ/groovy'
        }
        resources {
            srcDir 'src/integ/resources'
        }
    }
}

test {
    testLogging.showStandardStreams = true
    systemProperty 'java.util.logging.config.file', "${project.projectDir}/src/test/logging.properties"
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }

}

group = 'com.msgilligan.bitcoinj'
// artifactId is taken by default, from folder name
version = '0.2.7-SNAPSHOT'

task writeNewPom << {
    pom {
        project {
            inceptionYear '2018'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
}

task regTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    testLogging.showStandardStreams = true
    beforeSuite { descriptor ->
        if (descriptor.getClassName() != null) {
            logger.lifecycle('\033[1m' + descriptor.getName() + "\033[0m") // bold
        }
    }
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }

    systemProperty 'regtest', true
    systemProperty 'java.util.logging.config.file', "${project.projectDir}/src/integ/logging.properties"
    systemProperties ([ "omni.test.rpcTestUser": rpcTestUser,
                        "omni.test.rpcTestPassword": rpcTestPassword,
    ])
    include 'com/msgilligan/bitcoinj/integ/**', 'com/msgilligan/bitcoinj/rpc/**'
}
